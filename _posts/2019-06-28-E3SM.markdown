---
title: "E3SM"
layout: post
date: 2019-07-25 11：20
image: /assets/images/markdown.jpg
headerImage: false
category: blog
author: yunamao
description: 操作流程
---

##### 模式学习可以参考 CESM tutorial: 
[链接](http://www.cesm.ucar.edu/events/tutorials/?ref=nav)

##  <strong>1.Compiler and libraries：</strong>
<strong>Question:</strong>how to load the proper compiler for specific tool. Take ncview for example,  both pgi and intel can make ncview work. <br>
<strong>Response:</strong>
Usually the libraries (such as netcdf, hdf5, etc) are compiled with multiple compilers (such as pgi, intel, gnu). So, load the module for the compiler first and then load other relevant libraries.  <br>

Some clusters (such as NERSC) automatically load correct version of libraries when you swap compiler module (i.e. if you loaded pgi,
 then loaded netcdf, you should get netcdf lib compiled with pgi. Now, if you swap pgi with intel, the netcdf library should also be
 automatically swapped so that you get netcdf with intel).<br>

Bottom line is: the library you are using should be compatible with compiler you are using.<br>


## <strong>2. creating a compset</strong>
- You may follow the changes in this commit
[链接](https://github.com/hydrotian/ACME/commit/26e5516fef8d1b1db7f0d08c87fdbe016ee2f2d2).
this was the commit Tony did when he added RM compset.

- what you can do it to check the working version from add-inundation branch with RM and GLB05RM
- check the files that were modified based on Tony's commit
then translate the changes to current master
- also can refer to CESM[链接](http://www.cesm.ucar.edu/models/cesm1.2/cesm/doc/usersguide/c513.html)

## <strong>3. generate new land initial file</strong>
<strong>Problem:</strong> when running E3SM, came into this problem shown in e3sm.log file: <br>
pio_support::pio_die:: myrank=          -1 : ERROR: nf_mod.F90:        1288 : <br>
 NetCDF: Invalid dimension ID or name’<br>
 
<strong>Solution:</strong> generate new land initial file
 
The new land initial file can be generated using “interpinic” tool available in components/clm/tools/clm4_5/interpinic. You have to do the following:<br>

- First, run the case for a short duration (say 1 day) without using an initial condition by setting the following in user_nl_clm:
finidat = ‘’ <br>

The above step would generate a *.clm2.r.*.nc (located in /scratch/run)<br>

- Now use the interpinic tool to remap your old initial condition (alm45_mosart_bgc_crop_noirr_new_spinup_final_v2.clm2.r.2156-01-01-00000.nc) onto the newly created *.clm2.r.*.nc in step-1 via running the following on the compute node:<br>

cd /pic/projects/climate/maoy573/E3SM/components/clm/tools/clm4_5/interpinic<br>
module list:<br>
Currently Loaded Modulefiles:<br>
  1) intel/15.0.1(default) 2) mkl/15.0.1 3) mvapich2/2.1  4) cmake/2.8.12(default)  5) python/2.7.8     7) netcdf/4.3.2(default)<br>
setenv INC_NETCDF /share/apps/netcdf/4.3.2/intel/15.0.1/include<br>
setenv LIB_NETCDF /share/apps/netcdf/4.3.2/intel/15.0.1/lib<br>

./interpinic -i <path-to-old-initial-condition> -o <path-to-new-restart-file><br>

Some notes from NCAR on how to compile interpinic and other related topic are available at <br> http://www.cesm.ucar.edu/models/cesm1.2/clm/models/lnd/clm/doc/UsersGuide/x11704.html<br>

## <strong>4. understand the tracers in E3SM</strong>
In original MOSART, there are only two tracers, water and ice.now with sediment, we have mud as tracer 3, sand as tracer 4
and maybe temperature as tracer 5. The transport of the ice/mud/sand/tempeature all depend on the water (tracer 1)
so if one wants to calculate the sediment/heat transport, he needs to calculate the water first using KW or DW, then use the water storage as the base to calculate the concentration of other tracers. Some conductive/diffusive equations may be involved in sediment/heat transport, but not affect the water transport. With that, the sediment transport is the next step of water transport, it won't change the water routing in KW or DW.
 integer, parameter, public :: nt_rtm = 4    ! number of tracers <br>
  character(len=3), parameter, public :: rtm_tracers(nt_rtm) =  (/'LIQ','ICE','MUD','SAN'/) <br>
  integer, parameter, public :: nt_nliq = 1    ! number of tracers <br>
  integer, parameter, public :: nt_nice = 2    ! number of tracers <br>
  integer, parameter, public :: nt_nmud = 3    ! number of tracers <br>
  integer, parameter, public :: nt_nsan = 4    ! number of tracers <br>
  ## <strong>5. Creating a domain file for CLM and DATM</strong>
  [链接](http://www.cesm.ucar.edu/models/cesm1.1/clm/models/lnd/clm/doc/UsersGuide/x8342.html)
  ## <strong>6. Spinning up the CLM4.5 biogeochemistry (CLMBGC spinup)</strong>:[链接](http://www.cesm.ucar.edu/models/cesm1.2/clm/models/lnd/clm/doc/UsersGuide/x12544.html)
